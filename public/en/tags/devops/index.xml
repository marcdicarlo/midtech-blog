<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on {CodeTrace} - Discover Issues, Share Solutions.</title>
    <link>http://localhost:1313/en/tags/devops/</link>
    <description>Recent content in Devops on {CodeTrace} - Discover Issues, Share Solutions.</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 08 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/en/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Improving DNS Reliability with NodeLocalDNS in Kubernetes</title>
      <link>http://localhost:1313/en/posts/nodelocaldns/</link>
      <pubDate>Tue, 08 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/en/posts/nodelocaldns/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;improving-dns-reliability-with-nodelocaldns-in-kubernetes&#34;&gt;Improving DNS Reliability with NodeLocalDNS in Kubernetes&lt;/h1&gt;&#xA;&lt;p&gt;Occasionally in local Kubernetes clusters (specifically on Ubuntu 24.04), I noticed &lt;strong&gt;intermittent DNS resolution failures&lt;/strong&gt;â€”pods would fail to resolve names even though the host itself could do so just fine.&lt;/p&gt;&#xA;&lt;p&gt;The fix? Adding &lt;code&gt;NodeLocalDNS&lt;/code&gt; as a &lt;strong&gt;caching DNS layer&lt;/strong&gt; on each node. This setup reduces reliance on external DNS lookups by caching frequently queried results locally. Itâ€™s especially useful in lab environments, homelabs, or clusters where DNS latency or flakiness causes issues with microservice resolution.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting up this Blog! - Part 1</title>
      <link>http://localhost:1313/en/posts/blog-setup/</link>
      <pubDate>Mon, 24 Mar 2025 09:32:11 +0800</pubDate>
      <guid>http://localhost:1313/en/posts/blog-setup/</guid>
      <description>&lt;h2 id=&#34;first-post--automating-blog-deployment-with-hugo&#34;&gt;First Post! ðŸŽ‰ Automating Blog Deployment with Hugo&lt;/h2&gt;&#xA;&lt;p&gt;Hey everyoneâ€”welcome to my brand-new blog! I&amp;rsquo;m super excited to kick things off by sharing how I set up and automated the deployment process of this very website you&amp;rsquo;re visiting right now. After some research, I decided on &lt;strong&gt;Hugo&lt;/strong&gt;, a fantastic static site generator that&amp;rsquo;s incredibly quick, straightforward to use, and ideal for blogs and simpler websites. Let&amp;rsquo;s dive in!&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;why-hugo-&#34;&gt;Why Hugo? ðŸ¤”&lt;/h3&gt;&#xA;&lt;p&gt;Before we get technical, you might wonder: Why did I pick Hugo among all the options out there? Well, a few things caught my eye:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
